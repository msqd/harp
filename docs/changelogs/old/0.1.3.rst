Version 0.1.3
=============

* feat: working on k8s/helm deployment, release process, cleanup (Romain Dorgueil)
* feat: adjust default database paths (Romain Dorgueil)
* feat: adds a default optional yaml source from /etc/harp.yaml (Romain Dorgueil)
* feat: factors dashboard settings, add hack to serve all paths from index.html except for assets (Romain Dorgueil)
* feat: revert to default ipv6 bind (may be wrong, lets see later) (Romain Dorgueil)
* feat: cast port into int to avoid not found headaches (Romain Dorgueil)
* feat: logging configurable by env (Romain Dorgueil)
* feat(tmp): add tooling in runtime image for better debugability (later, this may go in a separate switchable image) (Romain Dorgueil)
* feat: default bind all (Romain Dorgueil)
* feat: small debug log in dashboard (Romain Dorgueil)
* feat(cicd): no need to clone for docker image tags (Romain Dorgueil)
* feat(cicd): fix html build, extend releases to dev versions (Romain Dorgueil)
* feat(cicd): fix pytest path (Romain Dorgueil)
* feat(cicd): debugging env (Romain Dorgueil)
* feat(cicd): lower poetry install verbosity (Romain Dorgueil)
* feat(cicd): change HOM to BASE to avoid system confusion when using root user (Romain Dorgueil)
* feat(cicd): fix build (Romain Dorgueil)
* feat: remove git clone for steps that does not require it (Romain Dorgueil)
* feat(cicd): remove useless env var (gitlab only supports gitlabs, it appears ...) (Romain Dorgueil)
* feat: change submodule urls to use https instead of ssh, for ci (Romain Dorgueil)
* feat: force gitlab to use http submodules (Romain Dorgueil)
* feat: remove requirements exports as docker build now uses poetry sources (Romain Dorgueil)
* feat: remove deprecated calls to utcnow (python 3.12) (Romain Dorgueil)
* feat: fix docker build using new architecture (Romain Dorgueil)
* feat: update python&node versions (Romain Dorgueil)
* feat: refactors front component to remove duplicate logic in pages (Romain Dorgueil)
* feat: reaftors page into its own component and simplify settings component to use builtin tools (onQuerySuccess, for example) (Romain Dorgueil)
* feat: adds support for booleans in settings dump (Romain Dorgueil)
* feat: formating of proxy settings (Romain Dorgueil)
* feat: missing dependency (Romain Dorgueil)
* feat: make whistle a vendor submodule (Romain Dorgueil)
* feat: adds a simple way to pass proxy options on command line (Romain Dorgueil)
* feat(sql): engine is now tied to the storage instance, and configuration is passed accordingly (Romain Dorgueil)
* feat: more cleanup (Romain Dorgueil)
* feat: cleanup and fixes (Romain Dorgueil)
* feat: show settings (Arthur Degonde)
* feat: log verbosity lowered (by a lot) (Romain Dorgueil)
* feat: moves transaction management into controller, ui devserver wont dispatch persistence related events (Romain Dorgueil)
* feat: ignore aiosqlite concurrency problems (Romain Dorgueil)
* feat: housekeeping (Romain Dorgueil)
* feat: fix default storage configuration (Romain Dorgueil)
* feat: simplify kernel arguments (Romain Dorgueil)
* feat: remove old container factory that has no use anymore (Romain Dorgueil)
* feat: update docs (Romain Dorgueil)
* feat: configuration starts to be dynamic (Romain Dorgueil)
* feat: storage is now a protocol (empty for now) and resolved using service container (Romain Dorgueil)
* feat: minor cleanup & adjustments (Romain Dorgueil)
* feat: placeholder for wtfs (Romain Dorgueil)
* feat: removes duplate type for messages (Romain Dorgueil)
* feat: getting ready to work around settings (Romain Dorgueil)
* feat: fixing the message panel (Romain Dorgueil)
* feat: this is inefficient enugh, dont spam the console (Romain Dorgueil)
* feat: transactions list looks like working again (but it still needs work, you need to look at it from a long distance to think it actually works) (Romain Dorgueil)
* feat: api for transactions and message contains data (Romain Dorgueil)
* feat: change sql storage to use sqlalchemy core (Romain Dorgueil)
* feat: remove deprecated old transaction object and api endpoint (Romain Dorgueil)
* feat: adds type generation for frontend (based on json schema from dataclasses) (Romain Dorgueil)
* feat: cleanup, refactoring, documentation (Romain Dorgueil)
* feat: basic api for transactions (not funcitonnal yet) #WIP (Romain Dorgueil)
* wip: refactoring services and adding sqlite storage (wip, history will be rewritten) (Romain Dorgueil)
* feat: apidoc generation (Romain Dorgueil)
* feat: small refactoring (Romain Dorgueil)
* add .python-version to gitignore (Arthur Degonde)
